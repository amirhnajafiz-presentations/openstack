"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[49],{8021:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(4848),t=n(8453);const r={},a="Processor and Virtual Machine Security",l={id:"System Security/vm",title:"Processor and Virtual Machine Security",description:"Processor Security",source:"@site/docs/System Security/2_vm.md",sourceDirName:"System Security",slug:"/System Security/vm",permalink:"/graphhub/docs/System Security/vm",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Memory Errors: Exploits and Defenses",permalink:"/graphhub/docs/System Security/memerr-rand"},next:{title:"Operating System Security",permalink:"/graphhub/docs/System Security/os"}},o={},c=[{value:"Processor Security",id:"processor-security",level:2},{value:"Virtualization",id:"virtualization",level:2},{value:"System Virtualization",id:"system-virtualization",level:3},{value:"Process virtualization",id:"process-virtualization",level:4},{value:"OS or Namespace virtualization",id:"os-or-namespace-virtualization",level:4},{value:"Full virtualization",id:"full-virtualization",level:4},{value:"VMM Architecture",id:"vmm-architecture",level:3},{value:"Type 1 (baremetal)",id:"type-1-baremetal",level:4},{value:"Type 2 (hosted)",id:"type-2-hosted",level:4},{value:"Issues",id:"issues",level:3},{value:"Virtualization Approaches",id:"virtualization-approaches",level:3},{value:"Memory Virtualization",id:"memory-virtualization",level:3},{value:"I/O Virtualization",id:"io-virtualization",level:3},{value:"VMs security",id:"vms-security",level:2},{value:"Security Applications",id:"security-applications",level:3},{value:"Security challenges in virtualized environments",id:"security-challenges-in-virtualized-environments",level:3},{value:"Docker security",id:"docker-security",level:3},{value:"Attack vectors",id:"attack-vectors",level:4},{value:"Best practices",id:"best-practices",level:4}];function u(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"processor-and-virtual-machine-security",children:"Processor and Virtual Machine Security"})}),"\n",(0,s.jsx)(i.h2,{id:"processor-security",children:"Processor Security"}),"\n",(0,s.jsx)(i.p,{children:"Processors operate at multiple privilege levels. At least two levels\nare needed, privileged and unprivileged."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Ring 0 is highes privilege"}),"\n",(0,s.jsx)(i.li,{children:"Ring 3 is lowest privilege"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"OS kernel runs in Ring 0, while user-level code executes in unprivileged mode.\nImprotant processor state can be changed only throught the execution of privileged\ninstruction."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Page tables"}),"\n",(0,s.jsx)(i.li,{children:"I/O devices"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"virtualization",children:"Virtualization"}),"\n",(0,s.jsx)(i.p,{children:"Creation of logical instances of physical resources. Same functions, without\nrewriting the whole thing."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"CPU"}),"\n",(0,s.jsx)(i.li,{children:"Memory"}),"\n",(0,s.jsx)(i.li,{children:"I/O"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Some resources are shared using high level interfaces rather than virtualization."}),"\n",(0,s.jsx)(i.p,{children:"Since only OS can control and manage system resources and share them\nsafely across user-level processes, resources are often virtualized.\nIt is as if a user-level process has an exclusive, private copy of that\nresource."}),"\n",(0,s.jsx)(i.p,{children:"One key problem is that there is no control in transfers across privilege levels.\nTransfering access between privileged and unprivileged levels are trough\nsystem interrupts."}),"\n",(0,s.jsx)(i.h3,{id:"system-virtualization",children:"System Virtualization"}),"\n",(0,s.jsx)(i.p,{children:"Creates several virtual systems within a single physical system.\nVVM (hypervisor) is the software layer providing the virtualization.\nVM runs on top of the VMM. VMM runs in kernel-level (Ring 0)."}),"\n",(0,s.jsx)(i.h4,{id:"process-virtualization",children:"Process virtualization"}),"\n",(0,s.jsx)(i.p,{children:"The VM supports an application binary interface that uses interrupts\nand system-calls. (JWM)"}),"\n",(0,s.jsx)(i.h4,{id:"os-or-namespace-virtualization",children:"OS or Namespace virtualization"}),"\n",(0,s.jsx)(i.p,{children:"Having multiple logical VMs that share the same OS kernel. Isolates\nVMs by partitioning all objects into namespaces. (Docker, vServer)"}),"\n",(0,s.jsx)(i.h4,{id:"full-virtualization",children:"Full virtualization"}),"\n",(0,s.jsx)(i.p,{children:"The VM supports a complete ISA and user and system instructions. (VirtualBox)"}),"\n",(0,s.jsx)(i.h3,{id:"vmm-architecture",children:"VMM Architecture"}),"\n",(0,s.jsx)(i.h4,{id:"type-1-baremetal",children:"Type 1 (baremetal)"}),"\n",(0,s.jsx)(i.p,{children:"The VMM runs on base hardware."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"---\nguest application\n-\nmulti guest OS\n-\nVMM\n-\nhost hardware\n---\n"})}),"\n",(0,s.jsx)(i.h4,{id:"type-2-hosted",children:"Type 2 (hosted)"}),"\n",(0,s.jsx)(i.p,{children:"The VMM runs as an ordinary application inside host OS."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"---\nguest application\n-\nmulti guest OS\n-\nVMM\n-\nhost OS\n-\nhost hardare\n---\n"})}),"\n",(0,s.jsx)(i.h3,{id:"issues",children:"Issues"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Protection levels"}),"\n",(0,s.jsx)(i.li,{children:"Requirement for efficient virtualization"}),"\n",(0,s.jsx)(i.li,{children:"Which instructions are privileged?"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"virtualization-approaches",children:"Virtualization Approaches"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Full virtualization using binary translation: needs disassemble the binary, identify instructions and patch them (like VMware or QEMU)"}),"\n",(0,s.jsx)(i.li,{children:"Paravirtualization: OS modified to run on VMM, then it uses Hypercalls (like Xen)"}),"\n",(0,s.jsx)(i.li,{children:"Harware-assisted virtualization: OS requests trap to VMM without binary translation or paravirtualization (most VMMs today)"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"memory-virtualization",children:"Memory Virtualization"}),"\n",(0,s.jsx)(i.p,{children:"Physical memory is divided among multiple VMs with two levels of translation in Guest OS and VMM.\nBy using shadow page, when guest attempts to update, VMM intercepts and emulate the effects on the\ncorresponding shadow page table."}),"\n",(0,s.jsx)(i.h3,{id:"io-virtualization",children:"I/O Virtualization"}),"\n",(0,s.jsx)(i.p,{children:"The VMM intercepts guest's I/O-performing instructions.\nPerforms necessary actions to emulate their effect.\nThis emulations leads to low performance for most I/O operations.\nCompared to CPU and memory, that are executed with less extra operations."}),"\n",(0,s.jsx)(i.h2,{id:"vms-security",children:"VMs security"}),"\n",(0,s.jsx)(i.h3,{id:"security-applications",children:"Security Applications"}),"\n",(0,s.jsx)(i.p,{children:"VM technology provides strong isolation that is necessary to run malware\nwithout undue risks. (Strong resource isolation and snapshot/restore features)"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Honypots systems"}),"\n",(0,s.jsx)(i.li,{children:"Malware analysis"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Basically, it is using VMs for less damage and keep alignment in guest OS.\nAlso, it provides protection from compromised OSes. Running malware and\nrootkit detection techniques in VMM, or enforce security properties from\nwithin the VMM."}),"\n",(0,s.jsx)(i.h3,{id:"security-challenges-in-virtualized-environments",children:"Security challenges in virtualized environments"}),"\n",(0,s.jsx)(i.p,{children:"Since virtualization leads to co-tenancy, it has challenges."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"VMs belonging to distinct principals use the same hadrware. Therefor, it needs strong isolation."}),"\n",(0,s.jsx)(i.li,{children:"It provides increased opportunities for side-channel attacks."}),"\n",(0,s.jsx)(i.li,{children:"Also, Denail of service is hard to prevent."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"docker-security",children:"Docker security"}),"\n",(0,s.jsx)(i.p,{children:"It uses namespaces and cgroups to isolate its containers.\nIt also has a container infrastructure and services (docker daemon)."}),"\n",(0,s.jsx)(i.h4,{id:"attack-vectors",children:"Attack vectors"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Shared kernel"}),"\n",(0,s.jsx)(i.li,{children:"Docker daemon needs root privileges"}),"\n",(0,s.jsx)(i.li,{children:"Apps can reach to the host"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"best-practices",children:"Best practices"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Avoid root privilege"}),"\n",(0,s.jsx)(i.li,{children:"Limit further using linux capabilities"}),"\n",(0,s.jsx)(i.li,{children:"Use seccomp-bpf to limit system calls that can be made by processes within the container"}),"\n",(0,s.jsx)(i.li,{children:"Avoid using untrusted softwares"}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var s=n(6540);const t={},r=s.createContext(t);function a(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);