"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[818],{410:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var s=n(4848),r=n(8453);const t={},l="Security Policies and Enforcement Mechanisms",o={id:"System Security/policies",title:"Security Policies and Enforcement Mechanisms",description:"In access control, three kinds of entities exists:",source:"@site/docs/System Security/6_policies.md",sourceDirName:"System Security",slug:"/System Security/policies",permalink:"/graphhub/docs/System Security/policies",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/graphhub/docs/System Security/auth"}},c={},a=[{value:"Discretionary Access Control (DAC)",id:"discretionary-access-control-dac",level:2},{value:"Managing permissions",id:"managing-permissions",level:3},{value:"Implemetation of DAC on UNIX",id:"implemetation-of-dac-on-unix",level:3},{value:"Objects",id:"objects",level:4},{value:"Subjects",id:"subjects",level:4},{value:"Effective, Real and Saved UID/GID",id:"effective-real-and-saved-uidgid",level:4},{value:"Capabilities",id:"capabilities",level:2},{value:"Mandatory Access Control (MAC)",id:"mandatory-access-control-mac",level:2},{value:"Multi-Level security (MSL)",id:"multi-level-security-msl",level:3},{value:"Confidentiality Policies",id:"confidentiality-policies",level:4},{value:"MLS: Bell-LaPadual Model",id:"mls-bell-lapadual-model",level:4},{value:"MLS: Biba Model (Integrity)",id:"mls-biba-model-integrity",level:4},{value:"Low Water-Mark Policy (LOMAC)",id:"low-water-mark-policy-lomac",level:5},{value:"Problems with Information Flow",id:"problems-with-information-flow",level:3},{value:"Alternative Approaches",id:"alternative-approaches",level:4}];function d(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"security-policies-and-enforcement-mechanisms",children:"Security Policies and Enforcement Mechanisms"})}),"\n",(0,s.jsx)(i.p,{children:"In access control, three kinds of entities exists:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Principals (users)"}),"\n",(0,s.jsx)(i.li,{children:"Subjects (processes)"}),"\n",(0,s.jsx)(i.li,{children:"Objects (files, network sockets, devices, ...)"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Moreover, there is basic principle of least privilege that says, throughout execution,\neach subject should be give the minimal access necessary to accomplish its task.\nThe goal is to control access to operations performed by subjects on objects."}),"\n",(0,s.jsx)(i.h2,{id:"discretionary-access-control-dac",children:"Discretionary Access Control (DAC)"}),"\n",(0,s.jsx)(i.p,{children:"Discretionary permissions settings at owner's discretion. Meaning that permission on an object is\nset by its owner."}),"\n",(0,s.jsx)(i.p,{children:"It can be modeled as a metrix:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"|    | O1 | O2 | O3 | ....\n| U1 | rw | w  | -  | ....\n|....|....|....|....| ....\n| un | r  | wx | -  | ....\n"})}),"\n",(0,s.jsx)(i.p,{children:"Implementations:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Access-control lists (ACLs)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"the AC-matrix column describing access rights on an object are stored with the object"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Capabilities","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"row-wise representation of AC-matrix, held by the user corresponding to the row"}),"\n",(0,s.jsx)(i.li,{children:"user should not change them, therefore comes with cryptographu mechanisms"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"managing-permissions",children:"Managing permissions"}),"\n",(0,s.jsx)(i.p,{children:"In systems, manageability is improved using indirection Groups and Roles (RBAC).\nIt gives the features of inheritance and negative permissions."}),"\n",(0,s.jsx)(i.h3,{id:"implemetation-of-dac-on-unix",children:"Implemetation of DAC on UNIX"}),"\n",(0,s.jsx)(i.h4,{id:"objects",children:"Objects"}),"\n",(0,s.jsx)(i.p,{children:"All resources are files, Each file has an owner and group owner.\nPermissions are divided into three groups (file owner, owner group, everyone else).\nAnd 3 bits of permission for each part (read/write/execute)."}),"\n",(0,s.jsx)(i.p,{children:"For directories:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"read means ability to list the directory"}),"\n",(0,s.jsx)(i.li,{children:"write means ability to create files in the directory"}),"\n",(0,s.jsx)(i.li,{children:"execute means the ability to access specific files if you know the name"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Permissions on newly created files determined by ",(0,s.jsx)(i.code,{children:"umask"}),". To change permissions, use ",(0,s.jsx)(i.code,{children:"chmod"}),".\nTo change ownership use ",(0,s.jsx)(i.code,{children:"chown"}),"."]}),"\n",(0,s.jsx)(i.h4,{id:"subjects",children:"Subjects"}),"\n",(0,s.jsx)(i.p,{children:"Subjects inherit the userid, group and supplemantry groups of the parent.\nFile permission checks are performed using this userid and groups.\nNo permission checks on superuser (userid 0).\nObjects created by a subject inherit the subject's userid and group."}),"\n",(0,s.jsx)(i.h4,{id:"effective-real-and-saved-uidgid",children:"Effective, Real and Saved UID/GID"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Effective: the uid used for determining access privileges"}),"\n",(0,s.jsx)(i.li,{children:"Real: the real user that is logged on, and on whose behalf a process is running"}),"\n",(0,s.jsx)(i.li,{children:"Saved: allows processes to temporarily relinquish privileges but then restore original privileges"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"capabilities",children:"Capabilities"}),"\n",(0,s.jsx)(i.p,{children:"They are tickets to gain access to a resource. Combine objects and access rights into one package\nis what they do. They are transferable and must be unforgeable."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Passwords"}),"\n",(0,s.jsx)(i.li,{children:"Certificates"}),"\n",(0,s.jsx)(i.li,{children:"File descriptors"}),"\n",(0,s.jsx)(i.li,{children:"Some cookies in web applications"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"They are more difficult to implement than ACLs. They are also difficult to manage, therefore,\ncapabilities in their purest form are not widely used in OSes."}),"\n",(0,s.jsx)(i.p,{children:"However, they provide a better framework than ACLs when one or more of the following conditions hold:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Policy enforcement isn't centralized"}),"\n",(0,s.jsx)(i.li,{children:"Parties have limited trust on each other"}),"\n",(0,s.jsx)(i.li,{children:"Rights need to move with principals"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"mandatory-access-control-mac",children:"Mandatory Access Control (MAC)"}),"\n",(0,s.jsx)(i.p,{children:"There are limitations for DAC:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.em,{children:"Trojan Horse"})," problem: assumes that users authorize all actions of their processes, but what if the process does not follow it?"]}),"\n",(0,s.jsx)(i.li,{children:"Provides no protection if a resource owner did not bother to set the ACL properly"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"To overcome these problems, MAC moves the responsibility to a central point, typically the system administrator."}),"\n",(0,s.jsx)(i.h3,{id:"multi-level-security-msl",children:"Multi-Level security (MSL)"}),"\n",(0,s.jsx)(i.p,{children:"MLS policies control information flow, and hence control how information is used."}),"\n",(0,s.jsx)(i.h4,{id:"confidentiality-policies",children:"Confidentiality Policies"}),"\n",(0,s.jsx)(i.p,{children:"An object is labeled with a level L (unclassified, classified, secret, top secret).\nA subject is associated with a clearance level C. Therefore, a subject can access on an object\nif its clearance level is equal to or above the object's level."}),"\n",(0,s.jsx)(i.h4,{id:"mls-bell-lapadual-model",children:"MLS: Bell-LaPadual Model"}),"\n",(0,s.jsx)(i.p,{children:"To prevent leakage of sensitive information, we ensure:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"No read-up : a subject S can read object O only if $C(S) \\geq L(O)$"}),"\n",(0,s.jsx)(i.li,{children:"No write-down : a subject can write an object O only if $L(O) \\geq C(S)$"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"This ensures that information can flow only upwards in terms of confidentiality level."}),"\n",(0,s.jsx)(i.h4,{id:"mls-biba-model-integrity",children:"MLS: Biba Model (Integrity)"}),"\n",(0,s.jsx)(i.p,{children:"Designed to ensure integrity rather than confidentiality.\nWe want to keep higher level subjects safe from lower level ones.\nSo any higher level can write to their lower level, however it only can read\nfrom higher level."}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"No read-down : a subject S can read object O only if $C(S) \\leq L(O)$"}),"\n",(0,s.jsx)(i.li,{children:"No write-up : a subject S can write an object O only if $C(S) \\geq L(O)$"}),"\n"]}),"\n",(0,s.jsx)(i.h5,{id:"low-water-mark-policy-lomac",children:"Low Water-Mark Policy (LOMAC)"}),"\n",(0,s.jsx)(i.p,{children:"Allows read-downs, but downgrade subject to the level of the subject."}),"\n",(0,s.jsx)(i.h3,{id:"problems-with-information-flow",children:"Problems with Information Flow"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Label creep, as more and more objects become sensitive, its difficult for the system to be used by lower-clearance subjects"}),"\n",(0,s.jsx)(i.li,{children:"No controlled mechanism for making exceptions"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"alternative-approaches",children:"Alternative Approaches"}),"\n",(0,s.jsx)(i.p,{children:"The key goal is to mitigate damage that may result from all pwerful root privileges.\nSo, we should break down root privilege into a number of sub-privileges, and decouple user\nprivileges from program privileges. Like:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Domain and type enforcement : SELinux"}),"\n",(0,s.jsx)(i.li,{children:"Linux capabilities"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var s=n(6540);const r={},t=s.createContext(r);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);